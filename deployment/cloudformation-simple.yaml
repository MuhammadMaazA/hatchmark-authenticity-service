AWSTemplateFormatVersion: '2010-09-09'
Description: 'Hatchmark Authenticity Service - Simplified Core Infrastructure'

Parameters:
  ProjectName:
    Type: String
    Default: 'hatchmark'
    Description: Name of the project for resource naming
  
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: Environment name

Resources:
  # S3 Buckets
  IngestionBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-ingestion-bucket-${Environment}-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ProcessedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-processed-bucket-${Environment}-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # DynamoDB Table for Asset Registry
  AssetRegistryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-assets-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: assetId
          AttributeType: S
        - AttributeName: perceptualHash
          AttributeType: S
      KeySchema:
        - AttributeName: assetId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: PerceptualHashIndex
          KeySchema:
            - AttributeName: perceptualHash
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  # SQS Queue for Watermarking
  WatermarkingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-watermarking-${Environment}'
      VisibilityTimeout: 900
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 20

  # IAM Role for Lambda Functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-lambda-execution-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub 
                    - '${BucketArn}/*'
                    - BucketArn: !GetAtt IngestionBucket.Arn
                  - !Sub 
                    - '${BucketArn}/*'
                    - BucketArn: !GetAtt ProcessedBucket.Arn
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !GetAtt IngestionBucket.Arn
                  - !GetAtt ProcessedBucket.Arn
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: 
                  - !GetAtt AssetRegistryTable.Arn
                  - !Sub '${AssetRegistryTable.Arn}/index/*'
        - PolicyName: SQSAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                Resource: !GetAtt WatermarkingQueue.Arn

Outputs:
  IngestionBucketName:
    Description: 'S3 Bucket for ingestion'
    Value: !Ref IngestionBucket
    Export:
      Name: !Sub '${ProjectName}-ingestion-bucket-${Environment}'

  ProcessedBucketName:
    Description: 'S3 Bucket for processed images'
    Value: !Ref ProcessedBucket
    Export:
      Name: !Sub '${ProjectName}-processed-bucket-${Environment}'

  DynamoDBTableName:
    Description: 'DynamoDB Asset Registry Table'
    Value: !Ref AssetRegistryTable
    Export:
      Name: !Sub '${ProjectName}-dynamodb-table-${Environment}'

  SQSQueueURL:
    Description: 'SQS Queue URL for watermarking'
    Value: !Ref WatermarkingQueue
    Export:
      Name: !Sub '${ProjectName}-queue-url-${Environment}'

  LambdaExecutionRoleArn:
    Description: 'Lambda Execution Role ARN'
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub '${ProjectName}-lambda-role-${Environment}'
